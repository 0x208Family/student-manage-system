<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

  <!-- ================= base configuration ================= -->

  <!-- loading external database properties file -->
  <context:property-placeholder location="classpath:properties/db-config.properties"/>

  <!--
      In addition to the Controller required by SpringMVC, all other business logic
      components should be scanned into the IOC container
   -->
  <context:component-scan base-package="edu.tyut">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>

  <aop:aspectj-autoproxy/>

  <!-- c3p0 data source -->
  <bean id="c3p0-dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
  </bean>

  <!-- sql session factory object -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="c3p0-dataSource"/>
    <property name="mapperLocations" value="classpath:edu/tyut/dao/mappers/*.xml"/>
    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
  </bean>

  <!-- mapper interface scanner -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="edu.tyut.dao"/>
  </bean>
  <!-- ================= base configuration end ================= -->

  <!-- ========== transaction manager ============ -->
  <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="c3p0-dataSource"/>
  </bean>
  <aop:config>
    <aop:pointcut id="pointcut" expression="execution(* edu.tyut.service.impl.*.delete*(..))"/>
    <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="pointcut"/>
  </aop:config>

  <aop:config>
    <aop:pointcut id="update" expression="execution(* edu.tyut.service.impl.*.update*(..))"/>
    <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="update"/>
  </aop:config>

  <aop:config>
    <aop:pointcut id="insert" expression="execution(* edu.tyut.service.impl.*.insert*(..))"/>
    <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="insert"/>
  </aop:config>

  <!-- configuration transaction advisor -->
  <tx:advice id="transactionInterceptor" transaction-manager="dataSourceTransactionManager">
    <tx:attributes>
      <tx:method name="select*" read-only="true"/>
      <tx:method name="delete*" rollback-for="java.lang.Exception"/>
      <tx:method name="update*" rollback-for="java.lang.Exception"/>
      <tx:method name="insert*" rollback-for="java.lang.Exception"/>
    </tx:attributes>
  </tx:advice>
  <!-- ============ transaction configuration end ================ -->

</beans>