package edu.tyut.bean.mgb;

import java.util.ArrayList;
import java.util.List;

public class ElectiveScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public ElectiveScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(String value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(String value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(String value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(String value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(String value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(String value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLike(String value) {
            addCriterion("student_id like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotLike(String value) {
            addCriterion("student_id not like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<String> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<String> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(String value1, String value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(String value1, String value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNull() {
            addCriterion("student_name is null");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNotNull() {
            addCriterion("student_name is not null");
            return (Criteria) this;
        }

        public Criteria andStudentNameEqualTo(String value) {
            addCriterion("student_name =", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotEqualTo(String value) {
            addCriterion("student_name <>", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThan(String value) {
            addCriterion("student_name >", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThanOrEqualTo(String value) {
            addCriterion("student_name >=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThan(String value) {
            addCriterion("student_name <", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThanOrEqualTo(String value) {
            addCriterion("student_name <=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLike(String value) {
            addCriterion("student_name like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotLike(String value) {
            addCriterion("student_name not like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameIn(List<String> values) {
            addCriterion("student_name in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotIn(List<String> values) {
            addCriterion("student_name not in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameBetween(String value1, String value2) {
            addCriterion("student_name between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotBetween(String value1, String value2) {
            addCriterion("student_name not between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIsNull() {
            addCriterion("elective_id is null");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIsNotNull() {
            addCriterion("elective_id is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveIdEqualTo(Integer value) {
            addCriterion("elective_id =", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotEqualTo(Integer value) {
            addCriterion("elective_id <>", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdGreaterThan(Integer value) {
            addCriterion("elective_id >", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("elective_id >=", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdLessThan(Integer value) {
            addCriterion("elective_id <", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdLessThanOrEqualTo(Integer value) {
            addCriterion("elective_id <=", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIn(List<Integer> values) {
            addCriterion("elective_id in", values, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotIn(List<Integer> values) {
            addCriterion("elective_id not in", values, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdBetween(Integer value1, Integer value2) {
            addCriterion("elective_id between", value1, value2, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotBetween(Integer value1, Integer value2) {
            addCriterion("elective_id not between", value1, value2, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveNameIsNull() {
            addCriterion("elective_name is null");
            return (Criteria) this;
        }

        public Criteria andElectiveNameIsNotNull() {
            addCriterion("elective_name is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveNameEqualTo(String value) {
            addCriterion("elective_name =", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameNotEqualTo(String value) {
            addCriterion("elective_name <>", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameGreaterThan(String value) {
            addCriterion("elective_name >", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameGreaterThanOrEqualTo(String value) {
            addCriterion("elective_name >=", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameLessThan(String value) {
            addCriterion("elective_name <", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameLessThanOrEqualTo(String value) {
            addCriterion("elective_name <=", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameLike(String value) {
            addCriterion("elective_name like", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameNotLike(String value) {
            addCriterion("elective_name not like", value, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameIn(List<String> values) {
            addCriterion("elective_name in", values, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameNotIn(List<String> values) {
            addCriterion("elective_name not in", values, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameBetween(String value1, String value2) {
            addCriterion("elective_name between", value1, value2, "electiveName");
            return (Criteria) this;
        }

        public Criteria andElectiveNameNotBetween(String value1, String value2) {
            addCriterion("elective_name not between", value1, value2, "electiveName");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(Integer value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(Integer value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(Integer value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(Integer value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(Integer value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<Integer> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<Integer> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(Integer value1, Integer value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elective_score
     *
     * @mbg.generated do_not_delete_during_merge Fri Jun 05 21:19:30 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elective_score
     *
     * @mbg.generated Fri Jun 05 21:19:30 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}